pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
--gamejam spoopy (aka fun-scary) minigolf

ball={x=8,y=8, dx=0, dy=0, k=48, k_i = 0}
arrow={x=0,y=0}
--holes = {1}
friction = 0.2

shot_counter = 0

shot_angle = 0

ball_stopped = false
ball_angle = 0

arrow_colour = 7

hole_num = 1

win = false

function read_input()
		speed = 1
  if btnp(5) then
    ball.dx = -speed*cos(shot_angle)
    ball.dy = -speed*sin(shot_angle)
    ball_stopped = false
    shot_counter += 1
  elseif btn(0) then
    shot_angle -= 0.05
  elseif btn(1) then
    shot_angle += 0.05
  end
end

function ball_update()
  cur_tile_x = flr(ball.x + 0.5)
  cur_tile_y = flr(ball.y + 0.5)
  cur_tile_k = mget(cur_tile_x, cur_tile_y)
  -- check for collision with walls
  next_tile_x = flr((ball.x + 0.5) + ball.dx)
  next_tile_y = flr((ball.y + 0.5) + ball.dy)
  next_tile_k = mget(next_tile_x , next_tile_y)

  -- check if hole
  if next_tile_k == 18 then
    if hole_num == 1 then
      hole_num = 2
      ball.x = 19.5
      ball.y = 5.5
      ball.dx = 0
      ball.dy = 0
      ball_stopped = true
      camera(16*8,0) -- one screen over
     else
      win = true
     end
  end

  -- check if wall
  if next_tile_k == 17 then
    if cur_tile_x != next_tile_x then
      ball.dx *= -1;
    end
    if cur_tile_y != next_tile_y  then
      ball.dy *= -1;
    end
  end

  ball_angle =	atan2(ball.dx, ball.dy)

  ball.x += ball.dx
  ball.y += ball.dy
  -- apply friction
  ball.dx *= (1 - friction)
  ball.dy *= (1 - friction)

  if sqrt(ball.dx^2+ball.dy^2) < 0.01 then
    ball.dx = 0
    ball.dy = 0
    ball_stopped = true
  else
    ball_stopped = false
  end

end

function _update()
  read_input()
  ball_update()
end

function draw_ball()
  if win then 
    return
  end

  ball.k_i = (ball.k_i+1)%4
  if ball_stopped == false  and ball.k_i == 0 then 
    if 1/8<=ball_angle and ball_angle < 3/8 then
      --rolldir = "up"
      if ball.k>=32 then
        ball.k=(ball.k+1)%4 + 32
      else
        ball.k=32
      end
    elseif 3/8<=ball_angle and ball_angle < 5/8 then
      --rolldir = "left"
      if ball.k>=48 then
        ball.k=(ball.k-1)%4 + 48
      else
        ball.k=48
      end
    elseif 5/8<=ball_angle and ball_angle < 7/8 then
      --rolldir = "down"
      if ball.k>=32 then
        ball.k=(ball.k-1)%4 + 32
      else
        ball.k=32
      end
    else
      --rolldir = "right"
      if ball.k>=48 then
        ball.k=(ball.k+1)%4 + 48
      else
        ball.k=48
      end
    end
  end
		
  spr(ball.k,8*ball.x,8*ball.y)
end

function draw_arrow()
  arrow.x = ball.x + 0.5 + cos(shot_angle)
  arrow.y = ball.y + 0.5 + sin(shot_angle)
  line(8*(arrow.x + cos(shot_angle)), 8*(arrow.y + sin(shot_angle)), 8*arrow.x, 8*arrow.y, arrow_colour)
  circ(8*(arrow.x + cos(shot_angle)/3), 8*(arrow.y + sin(shot_angle)/3), 2, arrow_colour)
end

function _draw()
	cls()
  map()
  if not win then
    draw_ball()
    if ball_stopped then
    draw_arrow()
    end
  else
    print("winner!", (hole_num - 1)*16*8 + 8*8,0,7)
  end

  shot_text = "shot no: "
  print(shot_text .. shot_counter, (hole_num - 1)*16*8, 0, 7)

end
__gfx__
57777775077777000707007000777770077777700777770007007070007777700777777007777700077777000777777000000000000000000000000000000000
77667667770077770777777077777777777777777777777707777770777700777777777777777777777777777777777700000000000000000000000000000000
67577757777707707777777707770077707770777700777077777777077077777777777777777770777777707777777700000000000000000000000000000000
67577757777777777707777707777777707770777777777077777077777777777777777777777770777777777777777700000000000000000000000000000000
67777577777777707077707777777777770777777777777777077707077777777777777777777777777777707777777700000000000000000000000000000000
77777777770077707077707707707777777777777777077077077707077700777777777777777770777777707777777700000000000000000000000000000000
57777775777777777777777777770077077777707700777777777777777777770777777077777777777777770777777000000000000000000000000000000000
56556565077777000777777000777770070700700777770007777770007777700707007007777700077777000707007000000000000000000000000000000000
05050505454545450505050500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
505050505454545450666d5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0505050545454545066766d500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5050505054545454567776d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0505050545454545066766d500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5050505054545454566766d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
05050505454545450444440500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
50505050545454545044405000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
57777755076667000766670055766675000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
76557776777777767777777667777777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
76775775777777707777777057775567000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777776777777767777777057777767000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
76777775777777707777777667777777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
76557775777777707777777057757767000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777776777777767777777667775567000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
57666755076667000766670055777775000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
57777775077777700777777057777775000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77667667777777777777777776676677000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
67577757777777777777777775777576000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
67577757777777777777777775777576000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
67777577777777777777777777577776000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777777777777777777777777777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
57777775077777700777777057777775000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
56556565070070700707007056565565000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000111111111100001111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000111111111111111111111100000000111010101100001110101010110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0011111010101010101010101111000011111010101100001110121010110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0011101010101010101010101011000011101010101111001110101010110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0011101010101010101010101011000011101010101011001111101010110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0011101210101010101010101011000011101010101011111110101010110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0011101010101010101010101011000011111010101010101010101010110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0011101010101010101010101011000011111110101010101010101010110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0011111010101010101010101111000000001111101010101010101011110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000111111111111111111111100000000000011111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
