pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
--gamejam spoopy (aka fun-scary) minigolf

ball = {x=8,y=8, dx=0, dy=0, k=48, k_i = 0}
arrow = {x=0,y=0}

holes = {}
holes[1] = {ball_x = 8, ball_y = 8, cam_x = 0, cam_y = 0}
holes[2] = {ball_x = 19.5, ball_y = 5.5, cam_x = 16*8, cam_y = 0}
friction = 0.2

shot_counter = 0
shot_display = {x=0, y=0, text = "shot no: "}
shot_angle = 0

ball_stopped = false
ball_angle = 0

arrow_colour = 7

hole_num = 1

win = false

function read_input()
		speed = 1
  if btnp(5) then
    ball.dx = -speed*cos(shot_angle)
    ball.dy = -speed*sin(shot_angle)
    ball_stopped = false
    shot_counter += 1
  elseif btn(0) then
    shot_angle -= 0.05
  elseif btn(1) then
    shot_angle += 0.05
  end
end

function init_hole(num)
  ball.x = holes[num].ball_x
  ball.y = holes[num].ball_y
  camera(holes[num].cam_x,holes[num].cam_y)
  ball.dx = 0
  ball.dy = 0
  ball_stopped = true
  -- we can add an offset here. Gets updated rarely, not once per frame
  shot_display.x = holes[num].cam_x
  shot_display.y = holes[num].cam_y
end

function ball_update()
  cur_tile_x = flr(ball.x + 0.5)
  cur_tile_y = flr(ball.y + 0.5)
  cur_tile_k = mget(cur_tile_x, cur_tile_y)
  -- check for collision with walls
  next_tile_x = flr((ball.x + 0.5) + ball.dx)
  next_tile_y = flr((ball.y + 0.5) + ball.dy)
  next_tile_k = mget(next_tile_x , next_tile_y)

  -- check if hole
  if next_tile_k == 18 then
    if hole_num == 1 then
      hole_num += 1
      init_hole(hole_num)
     else
      win = true
     end
  end

  -- check if wall
  if next_tile_k == 17 then
    if cur_tile_x != next_tile_x then
      ball.dx *= -1;
    end
    if cur_tile_y != next_tile_y  then
      ball.dy *= -1;
    end
  end

  ball_angle = atan2(ball.dx, ball.dy)

  ball.x += ball.dx
  ball.y += ball.dy
  -- apply friction
  ball.dx *= (1 - friction)
  ball.dy *= (1 - friction)

  if sqrt(ball.dx^2+ball.dy^2) < 0.01 then
    ball.dx = 0
    ball.dy = 0
    ball_stopped = true
  else
    ball_stopped = false
  end

end

function _update()
  if not win then
    read_input()
  end
  ball_update()
end

function draw_ball()

  ball.k_i = (ball.k_i+1)%4
  if ball_stopped == false  and ball.k_i == 0 then 
    if 1/8<=ball_angle and ball_angle < 3/8 then
      --up
      if ball.k>=32 then
        ball.k=(ball.k+1)%4 + 32
      else
        ball.k=32
      end
    elseif 3/8<=ball_angle and ball_angle < 5/8 then
      --left
      if ball.k>=48 then
        ball.k=(ball.k-1)%4 + 48
      else
        ball.k=48
      end
    elseif 5/8<=ball_angle and ball_angle < 7/8 then
      --down
      if ball.k>=32 then
        ball.k=(ball.k-1)%4 + 32
      else
        ball.k=32
      end
    else
      --right
      if ball.k>=48 then
        ball.k=(ball.k+1)%4 + 48
      else
        ball.k=48
      end
    end
  end
		
  spr(ball.k,8*ball.x,8*ball.y)
end

function draw_arrow()
  arrow.x = ball.x + 0.5 + cos(shot_angle)
  arrow.y = ball.y + 0.5 + sin(shot_angle)
  line(8*(arrow.x + cos(shot_angle)), 8*(arrow.y + sin(shot_angle)), 8*arrow.x, 8*arrow.y, arrow_colour)
  circ(8*(arrow.x + cos(shot_angle)/3), 8*(arrow.y + sin(shot_angle)/3), 2, arrow_colour)
end

function draw_display()
  if win then
    print("winner!", holes[hole_num].cam_x + 8*8, holes[hole_num].cam_y, 7)
  end
  print(shot_display.text .. shot_counter, shot_display.x, shot_display.y, 7)
end

function _draw()
	cls()
  map()
  if not win then
    draw_ball()
    if ball_stopped then
    draw_arrow()
    end
  end

  draw_display()

end
__gfx__
07777770077777000707007000777770077777700777770007007070007777700777777007777700077777000777777000000000000000000000000000000000
77777777770077770777777077777777777777777777777707777770777700777777777777777777777777777777777700000000000000000000000000000000
77077707777707707777777707770077707770777700777077777777077077777777777777777770777777707777777700000000000000000000000000000000
77077707777777777707777707777777707770777777777077777077777777777777777777777770777777777777777700000000000000000000000000000000
77777077777777707077707777777777770777777777777777077707077777777777777777777777777777707777777700000000000000000000000000000000
77777777770077707077707707707777777777777777077077077707077700777777777777777770777777707777777700000000000000000000000000000000
07777770777777777777777777770077077777707700777777777777777777770777777077777777777777770777777000000000000000000000000000000000
07007070077777000777777000777770070700700777770007777770007777700707007007777700077777000707007000000000000000000000000000000000
b3b3b3b305050505b3b3b3b300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3b3b3b3b505050503b66653b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b3b3b3b305050505b667665300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3b3b3b3b505050503677765b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b3b3b3b305050505b677765300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3b3b3b3b505050503676765b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b3b3b3b305050505b44444b300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3b3b3b3b505050503b444b3b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
07777700077777000777770007777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77007777777777777777777777777777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77770770777777707777777077007770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777777777777777777077777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777770777777707777777777777777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77007770777777707777777077770770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777777777777777777777007777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
07777700077777000777770007777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
07777770077777700777777007777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777777777777777777777777777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77077707777777777777777770777077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77077707777777777777777770777077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777077777777777777777777077777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777777777777777777777777777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
07777770077777700777777007777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
07007070070070700707007007070070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000111111111100001111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000111111111111111111111100000000111010101100001110101010110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0011111010101010101010101111000011111010101100001110121010110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0011101010101010101010101011000011101010101111001110101010110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0011101010101010101010101011000011101010101011001111101010110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0011101210101010101010101011000011101010101011111110101010110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0011101010101010101010101011000011111010101010101010101010110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0011101010101010101010101011000011111110101010101010101010110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0011111010101010101010101111000000001111101010101010101011110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000111111111111111111111100000000000011111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
